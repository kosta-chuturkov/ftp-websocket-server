# maximum lifetime of a connection. It will be removed once that timeout last and the connection is not in use
spring.datasource.hikari.max-lifetime: 30000
  # the min number of idle connections.
spring.datasource.hikari.minimum-idle: 1
  # how long a connection to stay idle till the pool close and clear it
spring.datasource.hikari.idle-timeout: 10000
  # max num of conns
spring.datasource.hikari.maximum-pool-size: 15
  # how long our application to wait for connection from the pool
spring.datasource.hikari.connection-timeout: 40000
  # LOGGING
logging.level.root: INFO
logging.level.ftp.core: DEBUG
logging.level.org.springframework.security: ERROR
logging.level.org.springframework.web: ERROR
logging.level.org.springframework.data: ERROR
logging.level.org.hibernate: INFO
logging.level.springfox.bean.validators.plugins.parameter.SizeAnnotationPlugin: ERROR
logging.level.org.springframework.boot.actuate.trace.WebRequestTraceFilter: TRACE

  # Hibernate configuration
hibernate.jdbc.time_zone: UTC
spring.jpa.properties.hibernate.jdbc.batch_size: 200
spring.jpa.properties.hibernate.order_inserts: true
spring.jpa.properties.hibernate.order_updates: true
spring.jpa.properties.hibernate.cache.use_second_level_cache: false
spring.jpa.properties.hibernate.cache.use_query_cache: false
spring.jpa.properties.hibernate.jdbc.time_zone: UTC
spring.jpa.properties.hibernate.generate_statistics: true
spring.jpa.properties.hibernate.cache.use_structured_entries: true
spring.jpa.properties.hibernate.session.events.log: false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults: false
spring.jpa.show-sql: false
spring.jpa.hibernate.ddl-auto: none
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS: false
spring.data.redis.repositories.enabled: false
spring:
  jpa:
    hibernate:
      use-new-id-generator-mappings: true
spring.jpa.open-in-view: false
spring.session:
  redis:
    flush-mode: ON_SAVE
    namespace: ftp-server
  store-type: redis